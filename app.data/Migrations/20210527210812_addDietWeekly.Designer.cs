// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.data;

namespace app.data.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210527210812_addDietWeekly")]
    partial class addDietWeekly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("app.entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenüID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PilatesId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DietId")
                        .IsUnique();

                    b.HasIndex("MenüID")
                        .IsUnique();

                    b.HasIndex("PilatesId")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DietId = 1,
                            FirstName = "Dilek",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 1,
                            PhoneNumber = "5524673747",
                            PilatesId = 1,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 2,
                            DietId = 2,
                            FirstName = "Sinem",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 2,
                            PhoneNumber = "5524673747",
                            PilatesId = 2,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 3,
                            DietId = 3,
                            FirstName = "Muammer",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 3,
                            PhoneNumber = "5524673747",
                            PilatesId = 3,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 4,
                            DietId = 4,
                            FirstName = "Ercan",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 4,
                            PhoneNumber = "5524673747",
                            PilatesId = 4,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 5,
                            DietId = 5,
                            FirstName = "Mustafa",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 5,
                            PhoneNumber = "5524673747",
                            PilatesId = 5,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 6,
                            DietId = 6,
                            FirstName = "Sercan",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 6,
                            PhoneNumber = "5524673747",
                            PilatesId = 6,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 7,
                            DietId = 7,
                            FirstName = "Güven",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            MenüID = 7,
                            PhoneNumber = "5524673747",
                            PilatesId = 7,
                            UserId = "asdad"
                        });
                });

            modelBuilder.Entity("app.entity.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("StartingBreastSize")
                        .HasColumnType("int");

                    b.Property<int>("StartingWaistline")
                        .HasColumnType("int");

                    b.Property<int>("StartingWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 592, DateTimeKind.Local).AddTicks(478),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 592, DateTimeKind.Local).AddTicks(9539),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 2,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(810),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(815),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 3,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(817),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(818),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 4,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(819),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(820),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 5,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(822),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(823),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 6,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(824),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(825),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 7,
                            DateEnd = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(826),
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(827),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        });
                });

            modelBuilder.Entity("app.entity.DietWekkly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvgNmbrOfSteps")
                        .HasColumnType("int");

                    b.Property<double>("AvgWater")
                        .HasColumnType("float");

                    b.Property<int>("CurrentBreastSize")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWaistline")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<int>("DietImplementation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DietId");

                    b.ToTable("DietWekklies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            DietId = 1,
                            DietImplementation = 4
                        },
                        new
                        {
                            Id = 2,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            DietId = 1,
                            DietImplementation = 3
                        },
                        new
                        {
                            Id = 3,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            DietId = 1,
                            DietImplementation = 2
                        },
                        new
                        {
                            Id = 4,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            DietId = 1,
                            DietImplementation = 5
                        },
                        new
                        {
                            Id = 5,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            DietId = 2,
                            DietImplementation = 4
                        },
                        new
                        {
                            Id = 6,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            DietId = 2,
                            DietImplementation = 3
                        },
                        new
                        {
                            Id = 7,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            DietId = 2,
                            DietImplementation = 2
                        },
                        new
                        {
                            Id = 8,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            DietId = 2,
                            DietImplementation = 5
                        },
                        new
                        {
                            Id = 9,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            DietId = 3,
                            DietImplementation = 4
                        },
                        new
                        {
                            Id = 10,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            DietId = 3,
                            DietImplementation = 3
                        },
                        new
                        {
                            Id = 11,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            DietId = 4,
                            DietImplementation = 2
                        },
                        new
                        {
                            Id = 12,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            DietId = 4,
                            DietImplementation = 5
                        },
                        new
                        {
                            Id = 13,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            DietId = 4,
                            DietImplementation = 4
                        },
                        new
                        {
                            Id = 14,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            DietId = 5,
                            DietImplementation = 3
                        },
                        new
                        {
                            Id = 15,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            DietId = 5,
                            DietImplementation = 2
                        },
                        new
                        {
                            Id = 16,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            DietId = 5,
                            DietImplementation = 5
                        });
                });

            modelBuilder.Entity("app.entity.Menü", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Gived1")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived2")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived3")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived4")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived5")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived6")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived7")
                        .HasColumnType("bit");

                    b.Property<bool>("Gived8")
                        .HasColumnType("bit");

                    b.Property<string>("MenüName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenüName8")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menü");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gived1 = false,
                            Gived2 = false,
                            Gived3 = false,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 2,
                            Gived1 = true,
                            Gived2 = false,
                            Gived3 = false,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 3,
                            Gived1 = true,
                            Gived2 = false,
                            Gived3 = false,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 4,
                            Gived1 = false,
                            Gived2 = true,
                            Gived3 = false,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 5,
                            Gived1 = false,
                            Gived2 = false,
                            Gived3 = true,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 6,
                            Gived1 = false,
                            Gived2 = false,
                            Gived3 = false,
                            Gived4 = false,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        },
                        new
                        {
                            Id = 7,
                            Gived1 = false,
                            Gived2 = true,
                            Gived3 = false,
                            Gived4 = true,
                            Gived5 = false,
                            Gived6 = false,
                            Gived7 = false,
                            Gived8 = false,
                            MenüName1 = "menü1",
                            MenüName2 = "menü2",
                            MenüName3 = "menü3",
                            MenüName4 = "menü4",
                            MenüName5 = "menü5",
                            MenüName6 = "menü6",
                            MenüName7 = "menü7",
                            MenüName8 = "menü8"
                        });
                });

            modelBuilder.Entity("app.entity.Pilates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingPackages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pilateis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4069),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 2,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4647),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 3,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4651),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 4,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4653),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 5,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4654),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 6,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4655),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 7,
                            DateStart = new DateTime(2021, 5, 28, 0, 8, 11, 593, DateTimeKind.Local).AddTicks(4656),
                            RemainingPackages = 8
                        });
                });

            modelBuilder.Entity("app.entity.Customer", b =>
                {
                    b.HasOne("app.entity.Diet", "Diet")
                        .WithOne("Customer")
                        .HasForeignKey("app.entity.Customer", "DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.entity.Menü", "Menü")
                        .WithOne("Customer")
                        .HasForeignKey("app.entity.Customer", "MenüID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.entity.Pilates", "Pilates")
                        .WithOne("Customer")
                        .HasForeignKey("app.entity.Customer", "PilatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diet");

                    b.Navigation("Menü");

                    b.Navigation("Pilates");
                });

            modelBuilder.Entity("app.entity.DietWekkly", b =>
                {
                    b.HasOne("app.entity.Diet", "Diet")
                        .WithMany("DietWekklies")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("app.entity.Diet", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("DietWekklies");
                });

            modelBuilder.Entity("app.entity.Menü", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("app.entity.Pilates", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
