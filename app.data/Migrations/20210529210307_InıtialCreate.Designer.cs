// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.data;

namespace app.data.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210529210307_InıtialCreate")]
    partial class InıtialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("app.entity.CombineDietMenüRecipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("DietMenüId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "DietMenüId");

                    b.HasIndex("DietMenüId");

                    b.ToTable("CombineDietMenüRecipe");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            DietMenüId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            DietMenüId = 1
                        },
                        new
                        {
                            RecipeId = 4,
                            DietMenüId = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            DietMenüId = 3
                        },
                        new
                        {
                            RecipeId = 6,
                            DietMenüId = 4
                        },
                        new
                        {
                            RecipeId = 4,
                            DietMenüId = 5
                        },
                        new
                        {
                            RecipeId = 7,
                            DietMenüId = 5
                        },
                        new
                        {
                            RecipeId = 5,
                            DietMenüId = 5
                        },
                        new
                        {
                            RecipeId = 5,
                            DietMenüId = 6
                        },
                        new
                        {
                            RecipeId = 7,
                            DietMenüId = 6
                        },
                        new
                        {
                            RecipeId = 6,
                            DietMenüId = 7
                        },
                        new
                        {
                            RecipeId = 4,
                            DietMenüId = 8
                        },
                        new
                        {
                            RecipeId = 3,
                            DietMenüId = 8
                        },
                        new
                        {
                            RecipeId = 1,
                            DietMenüId = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            DietMenüId = 10
                        });
                });

            modelBuilder.Entity("app.entity.CombineDietRecipe", b =>
                {
                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("DietId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("CombineDietRecipe");
                });

            modelBuilder.Entity("app.entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DietId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PilatesId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DietId")
                        .IsUnique()
                        .HasFilter("[DietId] IS NOT NULL");

                    b.HasIndex("PilatesId")
                        .IsUnique()
                        .HasFilter("[PilatesId] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DietId = 1,
                            FirstName = "Dilek",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 1,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 2,
                            DietId = 2,
                            FirstName = "Sinem",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 2,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 3,
                            DietId = 3,
                            FirstName = "Muammer",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 3,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 4,
                            DietId = 4,
                            FirstName = "Ercan",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 4,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 5,
                            DietId = 5,
                            FirstName = "Mustafa",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 5,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 6,
                            DietId = 6,
                            FirstName = "Sercan",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 6,
                            UserId = "asdad"
                        },
                        new
                        {
                            Id = 7,
                            DietId = 7,
                            FirstName = "Güven",
                            LastName = "Karaca",
                            Mail = "dlk@gmail.com",
                            PhoneNumber = "5524673747",
                            PilatesId = 7,
                            UserId = "asdad"
                        });
                });

            modelBuilder.Entity("app.entity.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("StartingBreastSize")
                        .HasColumnType("int");

                    b.Property<int>("StartingWaistline")
                        .HasColumnType("int");

                    b.Property<int>("StartingWeight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 304, DateTimeKind.Local).AddTicks(3634),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(3068),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 2,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4317),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4322),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 3,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4324),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4325),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 4,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4327),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4328),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 5,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4329),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4330),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 6,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4331),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4332),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        },
                        new
                        {
                            Id = 7,
                            DateEnd = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4334),
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 305, DateTimeKind.Local).AddTicks(4335),
                            Height = 168,
                            StartingBreastSize = 84,
                            StartingWaistline = 90,
                            StartingWeight = 80
                        });
                });

            modelBuilder.Entity("app.entity.DietMenü", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoMeals")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DietMenüs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Gender = false,
                            TwoMeals = false,
                            Weight = 80
                        },
                        new
                        {
                            Id = 2,
                            Gender = true,
                            TwoMeals = false,
                            Weight = 80
                        },
                        new
                        {
                            Id = 3,
                            Gender = false,
                            TwoMeals = false,
                            Weight = 65
                        },
                        new
                        {
                            Id = 4,
                            Gender = true,
                            TwoMeals = false,
                            Weight = 75
                        },
                        new
                        {
                            Id = 5,
                            Gender = true,
                            TwoMeals = true,
                            Weight = 80
                        },
                        new
                        {
                            Id = 6,
                            Gender = false,
                            TwoMeals = true,
                            Weight = 60
                        },
                        new
                        {
                            Id = 7,
                            Gender = false,
                            TwoMeals = true,
                            Weight = 65
                        },
                        new
                        {
                            Id = 8,
                            Gender = true,
                            TwoMeals = false,
                            Weight = 80
                        },
                        new
                        {
                            Id = 9,
                            Gender = true,
                            TwoMeals = true,
                            Weight = 70
                        },
                        new
                        {
                            Id = 10,
                            Gender = true,
                            TwoMeals = false,
                            Weight = 80
                        });
                });

            modelBuilder.Entity("app.entity.DietWekkly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AvgNmbrOfSteps")
                        .HasColumnType("int");

                    b.Property<double>("AvgWater")
                        .HasColumnType("float");

                    b.Property<int>("CurrentBreastSize")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWaistline")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int");

                    b.Property<bool>("Detox")
                        .HasColumnType("bit");

                    b.Property<int?>("DietId")
                        .HasColumnType("int");

                    b.Property<int>("DietImplementation")
                        .HasColumnType("int");

                    b.Property<int?>("DietMenüId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DietId");

                    b.HasIndex("DietMenüId");

                    b.ToTable("DietWekklies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            Detox = true,
                            DietId = 1,
                            DietImplementation = 4,
                            DietMenüId = 1,
                            Name = "1. Hafta"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            Detox = true,
                            DietId = 1,
                            DietImplementation = 3,
                            DietMenüId = 2,
                            Name = "2. Hafta"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            Detox = true,
                            DietId = 1,
                            DietImplementation = 2,
                            DietMenüId = 3,
                            Name = "3. Hafta"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            Detox = true,
                            DietId = 1,
                            DietImplementation = 5,
                            DietMenüId = 4,
                            Name = "4. Hafta"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            Detox = true,
                            DietId = 2,
                            DietImplementation = 4,
                            DietMenüId = 5,
                            Name = "1. Hafta"
                        },
                        new
                        {
                            Id = 6,
                            Active = false,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            Detox = true,
                            DietId = 2,
                            DietImplementation = 3,
                            DietMenüId = 6,
                            Name = "2. Hafta"
                        },
                        new
                        {
                            Id = 7,
                            Active = false,
                            AvgNmbrOfSteps = 2300,
                            AvgWater = 3.0,
                            CurrentBreastSize = 67,
                            CurrentWaistline = 76,
                            CurrentWeight = 75,
                            Detox = true,
                            DietId = 2,
                            DietImplementation = 2,
                            DietMenüId = 7,
                            Name = "3. Hafta"
                        },
                        new
                        {
                            Id = 8,
                            Active = false,
                            AvgNmbrOfSteps = 200,
                            AvgWater = 2.0,
                            CurrentBreastSize = 65,
                            CurrentWaistline = 75,
                            CurrentWeight = 60,
                            Detox = true,
                            DietId = 2,
                            DietImplementation = 5,
                            DietMenüId = 8,
                            Name = "4. Hafta"
                        },
                        new
                        {
                            Id = 9,
                            Active = false,
                            AvgNmbrOfSteps = 2500,
                            AvgWater = 2.5,
                            CurrentBreastSize = 70,
                            CurrentWaistline = 80,
                            CurrentWeight = 80,
                            Detox = true,
                            DietId = 3,
                            DietImplementation = 4,
                            DietMenüId = 9,
                            Name = "1. Hafta"
                        },
                        new
                        {
                            Id = 10,
                            Active = false,
                            AvgNmbrOfSteps = 2700,
                            AvgWater = 2.0,
                            CurrentBreastSize = 68,
                            CurrentWaistline = 79,
                            CurrentWeight = 78,
                            Detox = true,
                            DietId = 3,
                            DietImplementation = 3,
                            DietMenüId = 10,
                            Name = "2. Hafta"
                        });
                });

            modelBuilder.Entity("app.entity.Pilates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingPackages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pilateis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5260),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 2,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5835),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 3,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5839),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 4,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5840),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 5,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5842),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 6,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5843),
                            RemainingPackages = 8
                        },
                        new
                        {
                            Id = 7,
                            DateStart = new DateTime(2021, 5, 30, 0, 3, 7, 307, DateTimeKind.Local).AddTicks(5844),
                            RemainingPackages = 8
                        });
                });

            modelBuilder.Entity("app.entity.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Salata Tarifi"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Name = "Kabak Tarifi"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Name = "Tuzlu Tarifi"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Name = "Omlet Tarifi"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            Name = "Su Tarifi"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            Name = "Kahve Tarifi"
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            Name = "Karnıbahar Tarifi"
                        });
                });

            modelBuilder.Entity("app.entity.CombineDietMenüRecipe", b =>
                {
                    b.HasOne("app.entity.DietMenü", "DietMenü")
                        .WithMany("CombineDietMenüRecipes")
                        .HasForeignKey("DietMenüId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.entity.Recipe", "Recipe")
                        .WithMany("CombineDietMenüRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DietMenü");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("app.entity.CombineDietRecipe", b =>
                {
                    b.HasOne("app.entity.Diet", "Diet")
                        .WithMany("CombineDietRecipes")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.entity.Recipe", "Recipe")
                        .WithMany("CombineDietRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diet");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("app.entity.Customer", b =>
                {
                    b.HasOne("app.entity.Diet", "Diet")
                        .WithOne("Customer")
                        .HasForeignKey("app.entity.Customer", "DietId");

                    b.HasOne("app.entity.Pilates", "Pilates")
                        .WithOne("Customer")
                        .HasForeignKey("app.entity.Customer", "PilatesId");

                    b.Navigation("Diet");

                    b.Navigation("Pilates");
                });

            modelBuilder.Entity("app.entity.DietWekkly", b =>
                {
                    b.HasOne("app.entity.Diet", "Diet")
                        .WithMany("DietWekklies")
                        .HasForeignKey("DietId");

                    b.HasOne("app.entity.DietMenü", "DietMenü")
                        .WithMany()
                        .HasForeignKey("DietMenüId");

                    b.Navigation("Diet");

                    b.Navigation("DietMenü");
                });

            modelBuilder.Entity("app.entity.Diet", b =>
                {
                    b.Navigation("CombineDietRecipes");

                    b.Navigation("Customer");

                    b.Navigation("DietWekklies");
                });

            modelBuilder.Entity("app.entity.DietMenü", b =>
                {
                    b.Navigation("CombineDietMenüRecipes");
                });

            modelBuilder.Entity("app.entity.Pilates", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("app.entity.Recipe", b =>
                {
                    b.Navigation("CombineDietMenüRecipes");

                    b.Navigation("CombineDietRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
